/*
 * Copyright (c) 2022 Andreas Wagner.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
#include <unordered_map>

#include "core/DataTypes.h"
#include "core/Environment.h"
#include "core/math/Constants.h"
#include "core/mpi/MPIManager.h"

#include "hyteg/LikwidWrapper.hpp"
#include "hyteg/elementwiseoperators/P1ElementwiseOperator.hpp"
#include "hyteg/p1functionspace/P1Function.hpp"
#include "hyteg/p1functionspace/P1VariableOperator.hpp"
#include "hyteg/primitivestorage/PrimitiveStorage.hpp"
#include "hyteg/primitivestorage/StoragePermutator.hpp"

#include "block_smoother/GSEdgeSmoother.hpp"
#include "block_smoother/P1LDLTInplaceCellSmoother.hpp"
#include "utils/create_domain.hpp"

using walberla::real_t;
using walberla::uint_c;
using walberla::uint_t;
using walberla::math::pi;

using namespace hyteg;

int main( int argc, char** argv )
{
   // likwid_pinProcess(0);

   walberla::Environment env( argc, argv );
   walberla::mpi::MPIManager::instance()->useWorldComm();

   auto cfg = std::make_shared< walberla::config::Config >();
   if ( env.config() == nullptr )
   {
      cfg->readParameterFile( "./ILUSmoother3D.prm" );
   }
   else
   {
      cfg = env.config();
   }
   walberla::Config::BlockHandle parameters = cfg->getOneBlock( "Parameters" );
   parameters.listParameters();

   const uint_t level = 6;

   const std::string smoother_type = parameters.getParameter< std::string >( "smoother_type" );

   const auto setupStorage = createDomain( parameters );
   const auto storage      = std::make_shared< PrimitiveStorage >( *setupStorage );

   using FormType     = forms::p1_div_k_grad_blending_q3;
   using OperatorType = P1ElementwiseBlendingDivKGradOperator;

   std::function< real_t( const Point3D& ) > kappa2d = []( const Point3D& ) { return 1.; };
   std::function< real_t( const Point3D& ) > kappa3d = []( const Point3D& ) { return 1.; };

   FormType form( kappa3d, kappa2d );
   FormType form_const( []( auto ) { return 1.; }, []( auto ) { return 1.; } );

   hyteg::P1Function< real_t > src( "src", storage, level, level );
   hyteg::P1Function< real_t > dst( "dst", storage, level, level );

   hyteg::P1Function< real_t > src2( "src2", storage, level, level );
   hyteg::P1Function< real_t > dst2( "dst2", storage, level, level );

   hyteg::P1Function< real_t > src3( "src3", storage, level, level );
   hyteg::P1Function< real_t > dst3( "dst3", storage, level, level );

   hyteg::P1Function< real_t > tmp1( "tmp", storage, level, level );
   hyteg::P1Function< real_t > tmp2( "tmp", storage, level, level );
   hyteg::P1Function< real_t > tmp3( "tmp", storage, level, level );

   /*
   // cell ilu
   if ( smoother_type == "inplace_ldlt" )
   {
      auto cell_smoother = std::make_shared< hyteg::P1LDLTInplaceCellSmoother< OperatorType, FormType > >(
          op.getStorage(), op.getMinLevel(), op.getMaxLevel(), form );
      cell_smoother->init();

      for ( auto& cit : storage->getCells() )
      {
         cell_smoother->smooth( op, level, *cit.second, src, dst );
         WALBERLA_LOG_INFO_ON_ROOT( "op" );
      }
   }
   else if ( smoother_type == "surrogate_ldlt" )
   {
      const uint_t opDegreeX     = parameters.getParameter< uint_t >( "op_surrogate_degree_x" );
      const uint_t opDegreeY     = parameters.getParameter< uint_t >( "op_surrogate_degree_y" );
      const uint_t opDegreeZ     = parameters.getParameter< uint_t >( "op_surrogate_degree_z" );
      const uint_t assemblyLevel = parameters.getParameter< uint_t >( "op_surrogate_assembly_level" );
      const bool   symmetry      = parameters.getParameter< bool >( "op_surrogate_use_symmetry" );

      const std::array< uint_t, 3 > opDegrees = { opDegreeX, opDegreeY, opDegreeZ };

      const uint_t iluDegreeX = parameters.getParameter< uint_t >( "ilu_surrogate_degree_x" );
      const uint_t iluDegreeY = parameters.getParameter< uint_t >( "ilu_surrogate_degree_y" );
      const uint_t iluDegreeZ = parameters.getParameter< uint_t >( "ilu_surrogate_degree_z" );
      const uint_t skipLevel  = parameters.getParameter< uint_t >( "ilu_surrogate_skip_level" );

      const std::array< uint_t, 3 > iluDegrees = { iluDegreeX, iluDegreeY, iluDegreeZ };

      auto cell_smoother = std::make_shared< hyteg::P1LDLTSurrogateCellSmoother< OperatorType, FormType, true > >(
          op.getStorage(), op.getMinLevel(), op.getMaxLevel(), opDegrees, iluDegrees, symmetry, form );
      cell_smoother->init( assemblyLevel, skipLevel );

      LIKWID_MARKER_INIT;
      LIKWID_MARKER_REGISTER( "smooth" );

      for ( uint_t i = 0; i < 10; i += 1 )
      {
         for ( auto& cit : storage->getCells() )
         {
            LIKWID_MARKER_START( "smooth" );
            cell_smoother->smooth( op, level, *cit.second, src, dst );
            LIKWID_MARKER_STOP( "smooth" );

            LIKWID_MARKER_START( "smooth" );
            cell_smoother->smooth( op, level, *cit.second, src2, dst2 );
            LIKWID_MARKER_STOP( "smooth" );

            LIKWID_MARKER_START( "smooth" );
            cell_smoother->smooth( op, level, *cit.second, src3, dst3 );
            LIKWID_MARKER_STOP( "smooth" );

            WALBERLA_LOG_INFO_ON_ROOT( "op" );
         }
      }

      LIKWID_MARKER_CLOSE;
   }
    */

   std::vector< double > c = {
       8.34871,      32.8748,      -219.823,     678.573,      -1063.37,     819.794,      -246.686,     -0.467978,
       48.233,       -537.471,     2367.69,      -4728.04,     4403.11,      -1553.16,     -1.81163,     -70.4873,
       423.819,      -163.012,     -5090.68,     9260.75,      -4582.49,     2.94258,      465.217,      -4826.9,
       16583.6,      -15122.7,     10603,        -6051.83,     -3.10838,     -777.572,     4810.38,      11411.1,
       -105750,      107720,       -35288.9,     2.43229,      544.538,      -958.057,     -24583,       54468.7,
       132751,       -97903.6,     -0.859869,    -142.774,     -362.441,     8508.55,      1790.49,      -57186.7,
       -89083.9,     2.2552,       90.6194,      -794.898,     3223.01,      -6100.91,     5467.75,      -1873.72,
       3.79696,      173.343,      -2425.96,     13336.2,      -31155.4,     33388.5,      -13305.5,     -11.9645,
       -163.569,     2560.44,      -1175.5,      -43295.8,     79973,        -42984.3,     45.4765,      3071.21,
       -40137.8,     152242,       -141050,      138038,       -76517.6,     -66.1828,     -6569.44,     58523,
       21639.2,      -988274,      1.00667e+06,  -405716,      38.3123,      6171.71,      -40502.2,     -111113,
       483025,       1.79371e+06,  -1.057e+06,   -7.49133,     -2141.47,     10271,        50061.3,      -24899.5,
       -596667,      -1.716e+06,   -19.7333,     -361.622,     1877.01,      -4769.53,     864.888,      5828.29,
       -3891.7,      -45.8408,     -1109.6,      8858.56,      -27617.1,     6675.82,      36961.4,      -29212.6,
       25.9463,      2431.57,      -29542.9,     24375.8,      129955,       10060.8,      -76701.9,     -232.436,
       -23867.4,     172432,       -69198.3,     -1.4356e+06,  1.05625e+06,  -467779,      -5.51947,     33389.3,
       -175946,      -406195,      2.39092e+06,  2.92612e+06,  -1.43031e+06, 437.09,       -29906.5,     292503,
       -1.00015e+06, 2.05921e+06,  -4.51891e+06, -5.3682e+06,  -247.558,     10467.6,      -134545,      455590,
       421589,       -3.99519e+06, 5.884e+06,    58.0479,      1467.77,      -9124.51,     30385.2,      -27856.6,
       15877.8,      -6976.79,     193.44,       6322.63,      -53234.5,     205348,       -205353,      155729,
       -69173.2,     76.6165,      -10538.8,     82455,        291597,       -1.94481e+06, 1.44519e+06,  -594781,
       482.83,       112297,       -823764,      1.12634e+06,  8.231e+06,    -3.43418e+06, 633995,       2982.98,
       -114769,      1.032e+06,    3.26535e+06,  -3.86484e+07, 1.64053e+07,  -7.94131e+06, -4776.75,     146850,
       -2.16517e+06, 2.64935e+06,  1.45697e+07,  5.04403e+07,  -1.03498e+07, 1733.28,      -59207.8,     801209,
       154771,       -7.86737e+06, -6.53975e+06, -5.57786e+07, -89.2647,     -2458.07,     10037.9,      -3005.66,
       -112894,      115137,       -36273.8,     -375.256,     -13706.8,     85259.1,      -122560,      -801097,
       879575,       -364816,      -733.088,     10178.5,      -128522,      -342043,      1.26322e+06,  3.77652e+06,
       -1.55762e+06, 1288.96,      -194552,      1.60492e+06,  372541,       -3.47868e+07, 1.48988e+07,  -7.84132e+06,
       -14906.2,     51998.5,      -2.53076e+06, -8.79642e+06, 6.00231e+07,  4.99176e+07,  -2.70926e+07, 13032.9,
       -407591,      7.00691e+06,  -1.5724e+07,  1.2719e+07,   -1.52801e+07, -6.91286e+07, -2241.46,     142373,
       -1.47154e+06, 383672,       1.82148e+06,  -3.55427e+07, -7.22133e+07, 68.7263,      1909.73,      -3602.88,
       -16947.4,     65395.4,      162887,       -112074,      340.141,      13512.9,      -60879.2,     1610.45,
       521374,       1.66948e+06,  -968648,      1224.73,      -7297.34,     282791,       -943488,      2.02908e+06,
       -1.79404e+06, -6.76847e+06, -2406.61,     241839,       -2.49748e+06, 3.83654e+06,  1.75277e+07,  4.93473e+07,
       -1.12291e+07, 16570.4,      -242617,      6.12879e+06,  -1.12635e+07, 1.13857e+07,  -1.75341e+07, -7.01976e+07,
       2297.15,      1.19597e+06,  -1.05021e+07, 3.40625e+07,  -9.56018e+06, -6.16189e+07, -8.62996e+07, -6289.66,
       -89356.9,     -2.79337e+06, 1.46806e+07,  -1.05829e+07, -4.80955e+07, -6.13336e+07, -20.7752,     -573.303,
       -1.86316,     6564.68,      -1731.22,     -74040.3,     -108366,      -117.889,     -4930.22,     14603,
       20040.1,      -90170.3,     -639026,      -1.69843e+06, -578.068,     1037.44,      -135614,      366679,
       506944,       -4.92267e+06, 4.59775e+06,  711.526,      -96565.8,     839344,       -136899,      -8.80865e+06,
       -1.01474e+07, -5.84719e+07, -4791.27,     36351.4,      -1.25928e+06, -657475,      -3.18606e+06, -3.95846e+07,
       -7.42517e+07, -8999.01,     -219640,      -2.32287e+06, 1.19558e+07,  -1.35542e+07, -4.97733e+07, -6.20533e+07,
       -644.273,     -973495,      1.01598e+07,  -4.00403e+07, -2.93046e+07, -3.78181e+07, -3.83058e+07 };
   std::vector< double > s = {
       0.0506677,   -0.707063, 4.89997,     -15.808,   25.9849,   -21.0417,    6.65438,     0.0172703,   -0.94945,  11.8856,
       -55.1847,    113.088,   -108.766,    39.8797,   -0.022111, 0.577047,    -5.35874,    -23.2166,    226.599,   -358.806,
       171.508,     0.121431,  -7.32575,    101.416,   -293.856,  -38.2552,    95.6017,     63.8057,     -0.22029,  12.3446,
       -89.5783,    -612.31,   3882.92,     -3607.35,  1164.5,    0.17167,     -8.11539,    -0.797642,   967.543,   -2213.85,
       -4463.69,    3130.48,   -0.0506376,  1.92903,   17.1919,   -343.332,    83.22,       2039.26,     3602.79,   0.0299206,
       -0.694284,   9.71047,   -46.2581,    97.8404,   -96.4395,  35.937,      0.0565842,   -2.58149,    54.0994,   -364.75,
       989.073,     -1140.49,  479.339,     -0.298922, 18.3692,   -328.215,    1963.56,     -4373.49,    3635.12,   -989.281,
       1.60394,     -103.284,  1940.2,      -11723.6,  25773.1,   -23313.5,    8580.94,     -3.29713,    219.718,   -3731.05,
       17581.8,     -18645.7,  -875.942,    3576.87,   2.91814,   -195.07,     2989.43,     -11304.7,    10284.6,   -41266,
       37563.8,     -0.924667, 60.5109,     -847.053,  2751.22,   -4853.33,    21916.6,     22403.9,     -0.107192, -1.45031,
       11.3314,     -90.9029,  329.716,     -436.442,  196.162,   -0.522315,   16.5293,     -341.697,    2132.59,   -5136.17,
       4610.21,     -1394.92,  3.45988,     -270.846,  4672.12,   -29522.5,    77555.4,     -79036.4,    29892.3,   -16.4754,
       1112.42,     -19475.1,  123214,      -293383,   226552,    -59589.3,    26.3351,     -1934.99,    34956.8,   -231610,
       515588,      -297112,   91076.2,     -16.246,   1347.76,   -26484.9,    185924,      -302048,     -183513,   87746.2,
       2.25263,     -253.586,  6569.91,     -52749.7,  37566.5,   127960,      283596,      0.387393,    0.383766,  40.3161,
       -48.1351,    -351.778,  336.567,     -24.0716,  2.78786,   -110.1,      2299.79,     -14497.8,    34129.9,   -31233.6,
       11066.4,     -16.2376,  1303.57,     -22240,    140058,    -323845,     243636,      -61640.9,    69.8944,   -4709.69,
       89055.3,     -582593,   1.13039e+06, -543108,   89428.8,   -61.1267,    5815.62,     -118622,     748573,    -571250,
       -919727,     378388,    -15.2342,    -749.061,  40373.8,   -300520,     -425752,     144895,      908541,    31.9754,
       -1738.12,    12713.9,   -8579.96,    280142,    367730,    655528,      -0.650592,   -1.41115,    6.69816,   -965.193,
       4118.93,     -3948.59,  1343.23,     -5.88813,  236.997,   -4658.92,    24373.9,     -35408.9,    6614.59,   3503.53,
       24.5187,     -2335.12,  40510.3,     -263463,   540664,    -282962,     82663.8,     -67.6728,    5290.08,   -116189,
       748448,      -580665,   -904457,     369828,    -174.382,  4641.01,     -20544,      -170980,     -998874,   251673,
       1.27854e+06, 336.974,   -19775.1,    209349,    -314470,   -7558.1,     1.00679e+06, 1.35528e+06, -176.026,  12462.1,
       -126625,     102231,    349348,      702805,    780770,    0.518045,    3.56609,     -71.7344,    1232.86,   -2419.42,
       -3452.88,    2752.2,    5.4304,      -203.106,  3898.38,   -17737.1,    22072.7,     -35503.2,    37303.3,   -11.8899,
       1636.35,     -30333.6,  210339,      -303990,   -164800,   66865.2,     -10.5625,    462.645,     34166.3,   -309682,
       -352611,     181595,    850900,      368.657,   -19683.8,  209537,      -269365,     26205.4,     947595,    1.27214e+06,
       -296.274,    31325.9,   -253278,     -121376,   595565,    1.11041e+06, 1.05141e+06, 137.935,     -14810.8,  105914,
       113283,      521513,    684496,      575069,    -0.160631, -1.84932,    36.6176,     -426.547,    167.133,   1587.63,
       3186.9,      -1.80194,  57.0515,     -1143.75,  4854.43,   -7336.95,    18133,       13155.3,     -0.806465, -292.484,
       7050.73,     -59168.1,  32933.9,     105068,    257874,    33.3691,     -2581.7,     17793.8,     -3555.2,   246411,
       295894,      549962,    -206.592,    12814,     -133268,   85541.2,     268692,      555234,      650780,    135.238,
       -16575.3,    117395,    107493,      450322,    600607,    516348,      -238.04,     9333.99,     -110970,   -45152.6,
       306078,      374950,    287757 };
   std::vector< double > se = {
       0.0172578,    -1.29849,    9.00393,      -29.0408,     47.7318,     -38.6502,     12.2228,      0.0292622,   -1.82706,
       22.3551,      -103.123,    210.572,      -202.046,     73.9601,     -0.0200883,   1.62881,      -12.6888,    -34.0682,
       405.825,      -653.447,    313.966,      0.161147,     -15.2827,    193.602,      -560.618,     -55.6537,    171.019,
       118.691,      -0.306712,   25.6828,      -173.015,     -1103.67,    7146.54,      -6628.23,     2132.34,     0.237489,
       -17.3535,     2.43715,     1766.6,       -4085.87,     -8259.95,    5779.27,      -0.0686442,   4.32436,     31.2228,
       -627.408,     156.356,     3787.62,      6642.8,       0.0271415,   -1.49459,     19.0727,      -89.2624,    186.801,
       -182.794,     67.7725,     0.0553303,    -5.36055,     106.318,     -705.808,     1893.07,      -2167.34,    905.884,
       -0.419874,    36.3,        -639.51,      3786.08,      -8330.8,     6863.09,      -1844.31,     2.31785,     -209.369,
       3789.25,      -22557.9,    48869.1,      -43765.7,     15943.8,     -4.97581,     445.282,      -7235.76,    33529.4,
       -34101.1,     -3280.48,    7580.56,      4.51964,      -396.932,    5775.21,      -21380,       17875.4,     -76654.1,
       69883.6,      -1.44389,    124.552,      -1631.58,     5122.73,     -8374.23,     40746.6,      43035.7,     -0.00219159,
       -0.979462,    13.8586,     -143.547,     577.287,      -787.506,    358.228,      -0.44636,     37.0319,     -691.57,
       4238.09,      -10032.8,    8933.18,      -2684.86,     5.91843,     -523.662,     9045.1,       -56503,      146551,
       -148174,      55633,       -26.6202,     2252.33,      -38425.9,    238370,       -557465,      426667,      -110725,
       46.8028,      -3914.52,    68579.1,      -440947,      955585,      -536041,      159456,       -32.5403,    2743.31,
       -52002.4,     350137,      -551158,      -346459,      164800,      5.99831,      -538.719,     13039,       -98029.1,
       64188.1,      241490,      518299,       0.0851567,    -5.41011,    91.9127,      -149.922,     -624.436,    637.324,
       -53.875,      2.81618,     -242.71,      4569.2,       -28345.1,    65486.2,      -59261.7,     20771.5,     -30.33,
       2576.83,      -43678.5,    270550,       -617525,      462541,      -116310,      119.839,      -9888.17,    178089,
       -1.13551e+06, 2.16465e+06, -1.03738e+06, 167207,       -144.871,    12334.5,      -240050,      1.44988e+06, -1.06826e+06,
       -1.73562e+06, 714482,      18.1104,      -2465.77,     90671.1,     -587177,      -810213,      259851,      1.69062e+06,
       42.8872,      -2885.62,    18800.9,      -13232.1,     530093,      689994,       1.21079e+06,  -0.166177,   8.35707,
       -2.70065,     -1725.24,    7734,         -7360.67,     2471.51,     -6.21362,     529.842,      -9236.67,    47824.5,
       -67527.6,     12238.1,     6868.31,      54.6856,      -4623.45,    80364.8,      -508061,      1.02441e+06, -527784,
       148878,       -139.455,    11889.3,      -240333,      1.47434e+06, -1.11778e+06, -1.69934e+06, 700841,      -137.044,
       7931.75,      -6308.29,    -342630,      -1.93804e+06, 463385,      2.39435e+06,  505.892,      -36122.3,    366283,
       -613891,      -19435,      1.91151e+06,  2.54837e+06,  -312.175,    22687.8,      -230084,      211449,      674769,
       1.3447e+06,   1.47193e+06, 0.118379,     -2.98774,     -132.558,    2247.06,      -4617.86,     -6609.91,    5186.2,
       5.62262,      -471.055,    7718.94,      -34846.6,     40310.1,     -66553.2,     69744.2,      -37.4667,    3242.76,
       -61029.2,     402071,      -567431,      -324253,      132877,      -1.57895,     -962.966,     82622.2,     -616245,
       -702462,      345528,      1.59174e+06,  519.679,      -36753,      370735,       -565025,      57612.7,     1.82176e+06,
       2.39982e+06,  -728.631,    52978.7,      -464790,      -220791,     1.16938e+06,  2.1401e+06,   1.99584e+06, 342.762,
       -24834.4,     198102,      231072,       1.0167e+06,   1.32169e+06, 1.09591e+06,  -0.0314834,   -0.170444,   71.7091,
       -777.018,     360.604,     3097.4,       6049.48,      -1.73035,    142.694,      -2261.74,     9544.39,     -12825.7,
       35105.2,      25623.9,     5.95148,      -590.055,     14745.6,     -111785,      60351.6,      202284,      488763,
       59.1618,      -4102.46,    27481.1,      -185.594,     477348,      593098,       1.04008e+06,  -332.495,    23913.8,
       -241891,      187414,      574825,       1.10933e+06,  1.24659e+06, 372.244,      -27168.7,     215035,      248131,
       917722,       1.18407e+06, 993428,       -280.232,     19644.2,     -190978,      -48691.9,     616753,      735466,
       554710 };
   std::vector< double > w = {
       -0.120916, -0.0469086, 0.342341,  -1.06846,  1.73762,  -1.40366,   0.443739, -0.0104776, 0.51432,  -3.30576, 10.3722,
       -16.3436,  12.4585,    -3.64676,  0.0911687, -3.58265, 23.5902,    -77.2392, 125.828,    -99.0049, 30.097,   -0.292962,
       12.2335,   -77.077,    251.196,   -382.748,  270.544,  -71.2909,   0.487971, -20.4245,   120.056,  -382.551, 505.277,
       -305.833,  72.8886,    -0.403309, 16.6336,   -90.4936, 283.616,    -302.973, 191.18,     -62.3727, 0.130158, -5.26821,
       26.1361,   -80.5756,   58.7289,   -66.0085,  17.2689,  -0.0492985, -1.33804, 9.01379,    -32.3435, 55.2978,  -45.8392,
       14.8123,   -0.119678,  -0.921702, 13.2243,   -83.2342, 203.601,    -214.249, 82.4506,    0.542842, -17.1552, 80.78,
       -171.254,  244.855,    -308.019,  162.826,   -2.26276, 18.0679,    310.953,  -2472.53,   5685.26,  -5577.06, 2160.85,
       3.86447,   -26.5526,   -582.167,  2716.46,   -770.559, -2943.88,   1829.43,  -3.13549,   27.1657,  521.766,  -2046.52,
       3302.93,   -14048.6,   10533.2,   1.00568,   -10.5975, -196.194,   748.672,  -2253.72,   5479.32,  5708.91,  0.339376,
       8.50824,   -45.604,    145.101,   -175.542,  86.5838,  -10.5097,   0.921439, 25.3604,    -222.576, 1078.55,  -2128.24,
       1772.37,   -514.325,   -1.01915,  -10.676,   774.95,   -4867.38,   11461.8,  -10365.7,   3358.63,  4.89447,  627.142,
       -8380.21,  42698.6,    -81875.8,  62207.7,   -16854.8, 5.00445,    -1147.4,  14037.1,    -59630.3, 72833,    -23250,
       2397.36,   -14.5288,   1004.18,   -11970.2,  47930.1,  -58621.8,   50024.5,  -27148,     7.28691,  -346.115, 3914.68,
       -14398.6,  12452.4,    -7294.84,  7849.3,    -1.04281, -29.2478,   141.464,  -456.714,   413.093,  -191.412, 50.6665,
       -4.11162,  -108.313,   772.285,   -3735.69,  5993.3,   -3551.34,   566.176,  2.78298,    -85.7701, -2186.17, 15099.6,
       -33300.1,  17212.6,    130.362,   -21.8474,  -2107.1,  29058.5,    -151316,  237235,     -108211,  11545.2,  -47.4781,
       1427.14,   -34867.4,   135579,    -7633.63,  -190790,  72528,      62.0965,  -227.178,   24323.1,  -66170.2, -44802.6,
       -13640.3,  88944.4,    -16.2118,  -198.21,   -5239.13, 225.129,    43019.4,  4845.54,    41480.1,  1.65851,  49.2345,
       -177.074,  423.511,    471.001,   -442.873,  99.6357,  8.0849,     243.55,   -1488.81,   6950.1,   -6356.68, 133.209,
       1265.92,   8.40313,    144.122,   6533.49,   -38960.9, 79225.7,    -18454.3, -7754,      -20.5859, 5064.5,   -61319.2,
       270107,    -204117,    -99704,    52742.3,   319.786,  -393.588,   51848.4,  -64740.6,   -239487,  17301.9,  179120,
       -192.244,  2295.07,    -35649,    -3382.94,  -11065.8, 137055,     176861,   21.4883,    -1401.26, 2010.28,  25293.5,
       1050.74,   60558.4,    80979.8,   -1.31216,  -40.4096, 93.8654,    -181.343, -483.293,   -1399.77, 738.28,   -7.54136,
       -249.707,  1160.89,    -4756.73,  -2517.03,  2230.42,  146.04,     -18.3243, -276.363,   -5718.52, 22140.4,  -6576.17,
       -139763,   64972.8,    28.8545,   -4465.21,  41240.3,  -123777,    -167648,  55612.7,    140499,   -244.901, -6168.6,
       13415.8,   -220137,    22275.4,   247534,    234859,   -389.125,   -4166.74, -27767.5,   -392.254, 164854,   244655,
       187330,    194.37,     -464.079,  27147.8,   15292.3,  75090.7,    111992,   87805.6,    0.407643, 12.9555,  -14.7166,
       39.109,    103.46,     767.629,   947.269,   2.71078,  94.6188,    -286.368, 1054.71,    2956.39,  2226.44,  3348.59,
       9.27898,   187.08,     1605.68,   -1421.13,  -13156.2, 60494.6,    65097.3,  -3.07748,   1465.01,  -8147.74, 13855.1,
       78865.3,   174159,     128864,    56.5943,   4036.07,  -15006.4,   82855.4,  252253,     280357,   183403,   240.499,
       6166.21,   2719.37,    131643,    237680,    216954,   133575,     277.984,  4288.2,     16396.3,  50678.9,  105440,
       100189,    63227.9 };
   std::vector< double > bc = {
       -0.0720575, -0.410391, 2.72124,     -8.49774,  13.6178,    -10.8093,  3.3643,    0.0138614, -0.700821,  7.19378,
       -30.8925,   61.9496,   -58.8604,    21.3574,   0.00919943, 0.740276,  -2.20748,  -16.8733,  111.122,    -169.595,
       80.7582,    0.0464908, -6.38738,    56.3606,   -165.008,   83.8473,   -50.1182,  59.0449,   -0.0841044, 9.41224,
       -29.481,    -364.463,  1905.71,     -1900.95,  650.398,    0.0442716, -5.61736,  -23.8454,  501.557,    -903.45,
       -2158.84,   1610.12,   -0.00551057, 1.21603,   17.5783,    -162.488,  -16.1178,  812.917,   1696.78,    -0.00528251,
       -1.25688,   10.6371,   -42.3324,    80.6797,   -73.8137,   26.0155,   0.0115032, -3.598,    47.0257,    -255.891,
       615.889,    -666.893,  268.598,     -0.121806, 14.058,     -203.743,  1022.88,   -1962.53,  1395.68,    -273.144,
       1.45164,    -120.15,   1611.82,     -8108.51,  16239,      -14211,    5000.75,   -3.5566,   257.582,    -2986.07,
       11148.3,    -8539.91,  -4951.24,    4733.45,   3.48411,    -232.823,  2394.78,   -7287.46,  6311.05,    -25257.6,
       22692.3,    -1.20201,  76.7049,     -709.166,  1925.55,    -3253.92,  11470.3,   13807.6,   0.141319,   4.62894,
       -22.4675,   46.5349,   26.6281,     -118.793,  69.9934,    0.0505505, 28.0487,   -300.482,  1418,       -2714.68,
       2058.27,    -491.962,  3.85594,     -229.485,  3265.05,    -17226.3,  39500.1,   -38112.7,  13889.4,    -22.334,
       1414.85,    -17872.6,  88455.6,     -176326,   129185,     -31607.5,  47.7212,   -2628.82,  32840.7,    -156458,
       271306,     -141187,   36702.7,     -42.4881,  2090.84,    -26576.8,  120689,    -144226,   -81209.1,   45709.6,
       12.8776,    -577.744,  7655.85,     -32471.6,  12760.7,    46268.6,   138018,    -0.365076, -20.2531,   119.916,
       -363.499,   281.394,   -140.065,    76.2312,   0.416086,   -167.45,   1821.88,   -8891.87,  17167.8,    -14419.5,
       4849.48,    -22.986,   1196.05,     -16325.7,  82363.7,    -166975,   121522,    -28999.8,  115.713,    -6923.96,
       86634,      -424455,   717095,      -366988,   61426.4,    -210.083,  9718.94,   -125046,   516713,     -289416,
       -552932,    255725,    135.354,     -5047.91,  68782.9,    -213934,   -239670,   60059.7,   492489,     -16.9805,
       308.556,    -6908.66,  -760.67,     146426,    165832,     296311,    0.582287,  33.1889,   -110.364,   -157.049,
       1996.28,    -2020.91,  672.748,     -1.30281,  366.027,    -3448.55,  13356.8,   -11431.6,  -3024.44,   4105.07,
       51.7471,    -2262.44,  31928.4,     -157069,   287458,     -153682,   38629.1,   -207.415,  11133.6,    -135632,
       565687,     -355537,   -529477,     254963,    222.294,    -2765.02,  71362.4,   -128791,   -678638,    92037.4,
       768191,     71.0653,   -7790.53,    50227.5,   -183968,    -11408.1,  552571,    768416,    -125.377,   5702.1,
       -48400.5,   73270.9,   188778,      362143,    401787,     -0.490803, -25.4117,  20.3729,   388.512,    -1035.63,
       -2642.07,   1857.76,   1.18973,     -347.307,  2762.23,    -8951.85,  5503.36,   -22868.1,  21115.7,    -47.9694,
       1726.14,    -26170.6,  118837,      -139533,   -131845,    71976,     125.768,   -6729.24,  75545.8,    -234314,
       -288271,    87170.4,   513010,      61.7665,   -10737.7,   66617.3,   -254648,   2926.02,   592671,     788523,
       -382.345,   5703.66,   -84050.8,    -47998.4,  382753,     678083,    633276,    184.008,   -2317.98,   37024.9,
       61112.7,    290415,    384573,      322641,    0.162619,   7.63216,   10.3016,   -132.555,  25.4029,    1073.25,
       2024.5,     -0.317498, 121.134,     -793.191,  2345.37,    -2136.6,   12102.8,   13462.7,   15.3969,    -419.855,
       7551.63,    -30605,    9759.52,     62812.8,   163168,     -11.2066,  983.431,   -8087.79,  4929.36,    160269,
       228432,     336948,    -113.296,    7613.86,   -52683.7,   87045.2,   277017,    441264,    440444,     191.907,
       119.074,    27543.7,   103699,      348912,    422262,     339266,    -24.406,   8755.01,   -20988.4,   2607.03,
       195624,     232834,    175267 };
   std::vector< double > be = {
       -0.119037,   -0.720632,  4.77,        -14.9077, 23.8993,    -18.9736,   5.90595,   0.0200034,   -1.1337,    11.9991,
       -52.3032,    105.758,    -101.008,    36.7769,  0.0394787,  0.594447,   -0.121399, -38.986,     205.708,    -303.21,
       142.77,      0.00727217, -9.25798,    91.2919,  -278.937,   150.384,    -98.0033,  106.739,     -0.0274205, 13.6352,
       -44.1889,    -641.367,   3327.48,     -3342.9,  1154.38,    -0.0168275, -7.74388,  -44.4563,    874.675,    -1577.99,
       -3751.3,     2812.29,    0.0192569,   1.52628,  30.7703,    -283.564,   -23.3618,  1403.7,      2969.78,    0.0251217,
       -1.24798,    12.7807,    -54.8301,    109.891,  -104.332,   37.8215,    0.0539076, -3.99492,    59.0716,    -342.054,
       861.253,     -963.124,   397.918,     -0.26465, 21.1326,    -292.263,   1505.2,    -3030.55,    2283.97,    -508.417,
       2.22476,     -154.433,   2159.46,     -11407.7, 23950.1,    -21624.6,   7839.89,   -5.18844,    337.109,    -4144.74,
       16692.7,     -15825.7,   -3795.06,    5535.94,  4.87008,    -307.608,   3378.51,   -11346.9,    11927.4,    -38789.7,
       35094,       -1.60203,   101.152,     -1009.18, 3161.5,     -5990.19,   18467.6,   18940.4,     0.00515637, 1.32369,
       -4.67366,    -25.8781,   187.665,     -291.632, 140.073,    -0.369816,  23.8651,   -313.929,    1586.18,    -3182.32,
       2416.96,     -551.598,   6.29867,     -332.859, 4657.07,    -25423.1,   61013.8,   -61000.2,    22966.5,    -33.3562,
       1710.52,     -22940,     120335,      -254837,  192461,     -48872.2,   66.4955,   -3266.85,    44240,      -231928,
       451645,      -268708,    80793.1,     -55.0759, 2606.23,    -36328.8,   185242,    -249759,     -141646,    83821.6,
       15.1605,     -692.353,   10416.4,     -51915.3, 29769.2,    73110,      247505,    0.122068,    -11.6856,   106.078,
       -320.201,    203.641,    -132.076,    115.802,  2.58885,    -161.904,   2198.64,   -11494.6,    24006.8,    -21526,
       7740.41,     -31.7788,   1661.35,     -22476,   118428,     -251073,    188628,    -47340.3,    152.876,    -8037.5,
       109400,      -573244,    1.02656e+06, -536218,  97147.7,    -230.578,   11698.6,   -160232,     731333,     -478881,
       -827820,     389266,     100.56,      -5266.37, 77758.3,    -289544,    -371352,   123328,      804718,     15.5182,
       -449.532,    -672.925,   -7243.73,    221844,   272879,     507215,     -0.218713, 17.5448,     -65.529,    -593.87,
       3295.45,     -3337.14,   1156.02,     -5.95244, 352.124,    -4224.66,   16937.1,   -16193.2,    -3765.82,   5633.94,
       63.1918,     -3174.66,   43527.1,     -229675,  448146,     -264581,    78943.2,   -238.013,    11899.8,    -161928,
       737827,      -489335,    -820497,     386532,   74.4504,    -1883.76,   58676.7,   -173255,     -934974,    170840,
       1.20136e+06, 321.622,    -15713.1,    126176,   -267772,    -5775.53,   829032,    1.18502e+06, -246.926,   10972,
       -88408.6,    82384.5,    289655,      541495,   620341,     0.139073,   -10.804,   -29.6583,    846.977,    -1554.96,
       -3811.91,    2846.31,    5.63381,     -321.563, 3436.1,     -11410.6,   11440.3,   -37153.8,    34191.6,    -51.556,
       2510.7,      -35567.2,   182120,      -241466,  -155075,    89946.6,    110.007,   -5477.73,    78889.8,    -291157,
       -374074,     126195,     806114,      339.688,  -16199.6,   129805,     -277116,   -5445.43,    833003,     1.18733e+06,
       -603.156,    21051,      -159809,     -87323.3, 514733,     953198,     933698,    287.145,     -9021.91,   61263,
       83776.1,     415740,     547748,      473373,   -0.0302782, 2.45861,    26.8044,   -276.906,    -32.4517,   1425.01,
       2996.97,     -1.88597,   105.779,     -1018.54, 3104.62,    -5581.76,   17869.6,   18649.1,     13.645,     -651.514,
       10076.7,     -50378.3,   25892.2,     77529.9,  248157,     11.6378,    -375.759,  -908.595,    -7158.75,   221047,
       276927,      507323,     -259.603,    11276.7,  -90112.6,   83997.2,    296910,    548042,      623082,     273.648,
       -8708.88,    59539.6,    86273.8,     419864,   550577,     474604,     -177.799,  9780.42,     -55020.5,   -40704.4,
       247885,      312655,     245712 };
   std::vector< double > bn = {
       -0.244908,    -1.80015,    11.8887,      -37.1678,    59.5903,     -47.306,      14.7239,      0.0609837,   -2.64586,
       28.8731,      -126.98,     258.199,      -247.528,    90.3541,     -0.00638616,  0.19171,      5.1515,      -114.254,
       533.223,      -766.586,    357.981,      0.337887,    -18.3924,    211.677,      -643.094,     334.805,     -224.794,
       256.559,      -0.585691,   25.8791,      -94.4208,    -1646.97,    8236.36,      -8336.16,     2912.39,     0.37736,
       -12.4121,     -115.722,    2218.12,      -3925.96,    -9017.93,    6844.23,      -0.0849707,   1.49239,     76.3152,
       -726.951,     -35.0563,    3316.93,      7286.58,     0.249787,    -3.22045,     34.0279,      -142.315,    283.016,
       -267.784,     96.8402,     0.409076,     -10.2039,    150.946,     -856.319,     2145.64,      -2399.84,    993.285,
       -0.946232,    46.0668,     -650.818,     3380.95,     -6836.2,     5105.53,      -1107.2,      8.31318,     -351.815,
       5123.26,      -27343.1,    58562.9,      -54235.2,    20263.4,     -17.9684,     753.957,      -9770.58,    39568.1,
       -39483.3,     -5693.79,    11182,        16.0687,     -677.65,     8019.1,       -27730.6,     35735.6,     -106688,
       92800.4,      -5.20192,    220.659,      -2459.87,    8344.87,     -19082.7,     49960.6,      45251.2,     -1.28664,
       2.60966,      -24.082,     -49.6408,     434.577,     -690.948,    336.476,      -3.9978,      56.8471,     -785.716,
       3754.24,      -7481.67,    5655.87,      -1273.14,    15.1872,     -754.206,     10512.9,      -58497.3,    143061,
       -144952,      55406.7,     -102.852,     3836.87,     -52838.2,    281343,       -611065,      473783,      -126483,
       171.954,      -7145.13,    100516,       -546513,     1.11982e+06, -713154,      232142,       -118.408,    5642.48,
       -82697.7,     452466,      -679202,      -260845,     166086,      26.0946,      -1490.46,     24034.7,     -134647,
       110318,       143902,      633522,       4.50538,     -22.9328,    313.811,      -847.637,     813.006,     -661.876,
       396.287,      20.5592,     -350.008,     5253.23,     -26463.3,    56473.5,      -51359.4,     18658.2,     -64.6859,
       3540.4,       -48194.4,    261365,       -562048,     417611,      -102552,      432.33,       -16552,      239560,
       -1.28483e+06, 2.37722e+06, -1.26625e+06, 247043,      -349.357,    22197.1,      -326612,      1.6012e+06,  -1.11726e+06,
       -2.00336e+06, 947583,      -61.6612,     -7645.92,    135752,      -631380,      -817948,      327398,      1.97167e+06,
       146.214,      -2725.92,    14256.3,      -19549.1,    521981,      611368,       1.25165e+06,  -7.45824,    27.8564,
       -282.238,     -1326.98,    7161.66,      -7762.84,    2870.3,      -43.9466,     699.422,      -9878.77,    36872.8,
       -36960.5,     -11825.7,    15453,        81.8783,     -6416.13,    87882.5,      -493797,      983200,      -578431,
       185561,       -528.314,    21488,        -325041,     1.56314e+06, -1.10104e+06, -1.93271e+06, 892723,      -1003.55,
       5698.94,      -7645.89,    -256219,      -2.0734e+06, 425825,      2.91959e+06,  1531.75,      -44190.2,    393479,
       -534975,      -36082.9,    1.88844e+06,  2.81686e+06, -686.051,    28470.3,      -228612,      132028,      594192,
       1.18225e+06,  1.44555e+06, 5.94834,      -9.56223,    57.6677,     2006.15,      -2943.72,     -8528.09,    6667.98,
       42.2035,      -577.127,    7985.98,      -23176.6,    28660.5,     -80918,       79230.8,      -18.1502,    4842.78,
       -67348,       391239,      -518789,      -362048,     201411,      190.217,      -6242.57,     136301,      -593425,
       -697976,      290066,      1.92773e+06,  1975.5,      -44179.8,    412891,       -479488,      -81397.1,    1.82804e+06,
       2.79448e+06,  -405.19,     60457,        -338250,     -274896,     1.01832e+06,  2.07933e+06,  2.15256e+06, 188.767,
       -27938.7,     122623,      94169.2,      846363,      1.18204e+06, 1.07298e+06,  -1.84786,     -0.816034,   13.3302,
       -688.019,     -379.858,    2831.66,      6646.84,     -15.0466,    164.112,      -2376.82,     5635.24,     -14465.1,
       34631.6,      40774.6,     -17.5872,     -1160.74,    16973.4,     -108213,      37796.7,      179625,      553616,
       35.5499,      -3525.49,    13205.9,      -38508,      456077,      468233,       1.10375e+06,  -1018.72,    28239.9,
       -250348,      117101,      428304,       1.03376e+06, 1.36332e+06, -148.111,     -29886,       119382,      -6857.45,
       721468,       1.10508e+06, 1.03874e+06,  -1423.28,    21610.2,     -215038,      -265183,      433123,      637712,
       535677 };
   std::vector< double > bnw = {
       0.0757083, 0.245028,   -1.60686,   4.92646,   -7.78255,    6.09646,    -1.87262,    -0.00927275, 0.308315,  -3.42947,
       14.7755,   -29.3868,   27.7103,    -9.97274,  -0.00619299, 0.306759,   -4.51935,    33.6796,     -109.191,  134.678,
       -57.3811,  -0.0138668, 0.460003,   -5.19398,  -25.5935,    176.365,    -151.859,    22.3571,     0.0116041, 0.63794,
       -32.1265,  404.611,    -1333.31,   1159.73,   -363.797,    0.0143478,  -2.01645,    53.2952,     -431.656,  654.218,
       1055.12,   -761.545,   -0.0113782, 1.00462,   -21.8157,    133.242,    -24.7015,    -374.564,    -914.819,  0.0193458,
       1.06965,   -8.21116,   31.1878,    -55.9115,  48.48,       -16.3402,   -0.00842964, 3.62212,     -41.6051,  212.724,
       -483.018,  494.783,    -189.714,   0.274781,  -15.1031,    208.941,    -1034.4,     2060.35,     -1613.92,  421.09,
       -1.77463,  116.349,    -1499.55,   7359.62,   -14448.9,    11973.8,    -3905.81,    3.95706,     -232.13,   2709.4,
       -10532.6,  10474.8,    1177.48,    -2642.26,  -3.72129,    198.631,    -2159.1,     7210.74,     -6973.72,  15670.8,
       -14430.1,  1.23725,    -61.7077,   633.61,    -1918.02,    2478.55,    -6736.14,    -6722.65,    -0.186216, -4.75548,
       23.3501,   -58.1056,   12.0204,    60.3077,   -40.1294,    -0.0733978, -30.3594,    293.796,     -1340.85,  2487.76,
       -1894.08,  490.009,    -3.92987,   201.942,   -2718.46,    13829.1,    -30360.5,    27663.3,     -9526.66,  19.5614,
       -1253.91,  15045.4,    -72538.2,   136952,    -94144.2,    21910.6,    -40.8244,    2174.29,     -25958.8,  117721,
       -178290,   70561,      -15278.3,   35.1003,   -1639.86,    19960.9,    -85713.5,    86474.8,     44420.9,   -12200.5,
       -9.98446,  424.559,    -5376.02,   21626.6,   -4739.27,    -22455.9,   -76305,      0.51405,     18.308,    -96.0808,
       276.146,   -137.869,   26.797,     -26.9884,  0.101739,    147.566,    -1426.71,    6608.69,     -11664.1,  9015.72,
       -2846.33,  19.2845,    -875.086,   11810.5,   -58203.5,    114720,     -79452.9,    18320.2,     -86.3926,  5230.18,
       -62922.7,  298752,     -467952,    207211,    -27075.8,    161.784,    -6469.24,    84013.1,     -332269,   137444,
       362171,    -136211,    -101.557,   2904.56,   -43450.4,    130969,     149938,      -11566.1,    -276744,   10.5479,
       79.5545,   2900.4,     2978.56,    -86018.9,  -86324.9,    -168053,    -0.800238,   -29.2759,    88.7673,   65.6128,
       -1366.39,  1173.03,    -336.365,   -0.138456, -299.61,     2509.85,    -9464.22,    7167.11,     1321.7,    -1760.42,
       -40.8173,  1513.36,    -21645.8,   103800,    -183986,     85510.5,    -19044.3,    146.672,     -8061.97,  93317.6,
       -376408,   188140,     354168,     -140791,   -189.433,    897.587,    -42720.9,    53696.8,     457239,    1272.52,
       -456837,   -43.7334,   5135.01,    -34097.5,  114282,      36492,      -316935,     -471964,     93.8915,   -3711.41,
       33726.8,   -44672.1,   -101965,    -210225,   -245333,     0.637715,   22.3172,     -20.1768,    -223.507,  711.824,
       1904.32,   -1124.51,   0.325358,   272.859,   -1894.63,    6037.26,    -2483.06,    15420.8,     -12713.3,  36.9526,
       -1050.46,  16821.9,    -73635.3,   81636.3,   98470,       -41398.8,   -83.8009,    4790.24,     -49261.5,  145214,
       224189,    -13382.8,   -318025,    -9.85725,  8560.44,     -49794.2,   193435,      45713.7,     -367449,   -521751,
       315.661,   -3168.88,   60035.9,    46865.9,   -231944,     -445731,    -427609,     -148.852,    2383.36,   -30615.6,
       -41046.7,  -181339,    -250928,    -216352,   -0.19999,    -6.6984,    -5.98065,    74.553,      -32.0213,  -770.583,
       -1388.15,  -0.234237,  -92.5301,   508.785,   -1493.44,    803.137,    -8248.81,    -9403.45,    -11.8405,  217.59,
       -4615.14,  17564,      -3678.49,   -44755.7,  -106315,     5.47126,    -744.344,    4639.78,     -877.692,  -110317,
       -169696,   -245810,    64.5834,    -5591.25,  35644.3,     -62023.3,   -210237,     -338432,     -333858,   -166.104,
       -728.71,   -20813.8,   -82607.2,   -262217,   -319305,     -256686,    -11.9389,    -6632.6,     13892.4,   -11112.1,
       -144389,   -172213,    -130667 };

   WALBERLA_LOG_INFO_ON_ROOT("now");
   {
      ldlt::p1::dim3::LDLTPolynomials ldltPolynomials( { 6, 6, 6 }, ldlt::p1::dim3::lowerDirectionsAndCenter );

      WALBERLA_LOG_INFO_ON_ROOT("c");
      for ( uint_t idx = 0; idx < c.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_C ).setCoefficient( idx, c[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("s");
      for ( uint_t idx = 0; idx < s.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_S ).setCoefficient( idx, s[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("se");
      for ( uint_t idx = 0; idx < se.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_SE ).setCoefficient( idx, se[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("w");
      for ( uint_t idx = 0; idx < w.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_W ).setCoefficient( idx, w[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("bc");
      for ( uint_t idx = 0; idx < bc.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_BC ).setCoefficient( idx, bc[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("be");
      for ( uint_t idx = 0; idx < be.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_BE ).setCoefficient( idx, be[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("bn");
      for ( uint_t idx = 0; idx < bn.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_BN ).setCoefficient( idx, bn[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("bnw");
      for ( uint_t idx = 0; idx < bnw.size(); idx += 1 )
         ldltPolynomials.getPolynomial( hyteg::stencilDirection::VERTEX_BNW ).setCoefficient( idx, bnw[idx] );

      WALBERLA_LOG_INFO_ON_ROOT("bi");
      LIKWID_MARKER_INIT;
      WALBERLA_LOG_INFO_ON_ROOT("bs");
      // LIKWID_MARKER_REGISTER( "smooth1" );
      // LIKWID_MARKER_REGISTER( "smooth2" );
      // LIKWID_MARKER_REGISTER( "smooth3" );
      // LIKWID_MARKER_REGISTER( "forward_inner" );
      // LIKWID_MARKER_REGISTER( "backward_inner" );
      WALBERLA_LOG_INFO_ON_ROOT("as");
      for ( auto cit : storage->getCells() )
      {
         Cell& cell = *cit.second;

         WALBERLA_LOG_INFO_ON_ROOT("cs");
         ldlt::p1::dim3::ConstantStencil opStencilProvider( level, cell, form );
         // ldlt::p1::dim3::AssembledStencil< FormType > opStencilProvider (level, cell, form);

         WALBERLA_LOG_INFO_ON_ROOT("b");
         ldlt::p1::dim3::LDLTBoundaryStencils boundary;

         WALBERLA_LOG_INFO_ON_ROOT("bl");
         for ( uint_t i = 0; i < 1; i += 1 )
         {
            WALBERLA_LOG_INFO_ON_ROOT( "sm1" );
            LIKWID_MARKER_START( "smooth1" );
            ldlt::p1::dim3::apply_full_surrogate_ilu_smoothing_step< hyteg::P1Function< real_t >,
                                                                     ldlt::p1::dim3::ConstantStencil< FormType >,
                                                                     true,
                                                                     false >(
                opStencilProvider, ldltPolynomials, boundary, level, cell, src, tmp1, dst );
            LIKWID_MARKER_STOP( "smooth1" );

            WALBERLA_LOG_INFO_ON_ROOT( "sm2" );
            LIKWID_MARKER_START( "smooth2" );
            ldlt::p1::dim3::apply_full_surrogate_ilu_smoothing_step< hyteg::P1Function< real_t >,
                                                                     ldlt::p1::dim3::ConstantStencil< FormType >,
                                                                     true,
                                                                     false >(
                opStencilProvider, ldltPolynomials, boundary, level, cell, src2, tmp2, dst2 );
            LIKWID_MARKER_STOP( "smooth2" );

            WALBERLA_LOG_INFO_ON_ROOT( "sm3" );
            LIKWID_MARKER_START( "smooth3" );
            ldlt::p1::dim3::apply_full_surrogate_ilu_smoothing_step< hyteg::P1Function< real_t >,
                                                                     ldlt::p1::dim3::ConstantStencil< FormType >,
                                                                     true,
                                                                     false >(
                opStencilProvider, ldltPolynomials, boundary, level, cell, src3, tmp3, dst3 );
            LIKWID_MARKER_STOP( "smooth3" );
         }
      }
      LIKWID_MARKER_CLOSE;
   }
}
